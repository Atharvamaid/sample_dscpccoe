[{"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\index.js":"1","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\App.js":"2","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\reportWebVitals.js":"3","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Team.js":"4","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Navbar.js":"5","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\main.js":"6","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Footer.js":"7","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Events.js":"8","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Videos.js":"9","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Home.js":"10","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Connect.js":"11","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Header.js":"12","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\WhatWeDo.js":"13"},{"size":802,"mtime":1611233278864,"results":"14","hashOfConfig":"15"},{"size":2273,"mtime":1611568388928,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1611233278866,"results":"17","hashOfConfig":"15"},{"size":15887,"mtime":1611237190259,"results":"18","hashOfConfig":"15"},{"size":6231,"mtime":1611398669519,"results":"19","hashOfConfig":"15"},{"size":4008,"mtime":1611397730398,"results":"20","hashOfConfig":"15"},{"size":2378,"mtime":1611480732275,"results":"21","hashOfConfig":"15"},{"size":10531,"mtime":1611481795607,"results":"22","hashOfConfig":"15"},{"size":1396,"mtime":1611480988576,"results":"23","hashOfConfig":"15"},{"size":246,"mtime":1611233278832,"results":"24","hashOfConfig":"15"},{"size":921,"mtime":1611479216693,"results":"25","hashOfConfig":"15"},{"size":2660,"mtime":1611481517052,"results":"26","hashOfConfig":"15"},{"size":3538,"mtime":1611245776476,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"19blli5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\index.js",[],["57","58"],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\App.js",["59","60"],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\reportWebVitals.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Team.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Navbar.js",["61"],"import React from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport Image from '../assets/logos/dsclogo.jpg';\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\nexport const itemClick = (e) => {\r\n    console.log(\"clicked\");\r\n    // var a = new Navbar();\r\n    \r\n  }\r\n  \r\n  export const menuData = [\r\n    {\r\n      color: \"#F4B400\",\r\n      icon: \"fa-paper-plane\",\r\n      content : \"Connect\",\r\n      href:\"/connect\",\r\n      click: itemClick\r\n    },{\r\n      color: \"#DB4437\",\r\n      icon: \"fa-chart-bar\",\r\n      content : 'Projects',\r\n      href : \"/projects\",\r\n      click: itemClick\r\n    },{\r\n      color: \"#F4B400\",\r\n      icon: \"fa-users\",\r\n      content : 'The Team',\r\n      href : \"/team\",\r\n      click: itemClick\r\n    },{\r\n      color: \"#0F9D58\",\r\n      icon: \"fa-tags\",\r\n      content : 'Events',\r\n      href : '/events',\r\n      click: itemClick\r\n    },{\r\n      color: \"#4285F4\",\r\n      icon: \"fa-home\",\r\n      content : 'Home',\r\n      href:\"/\",\r\n      click: itemClick\r\n    },\r\n    {\r\n      color: \"#0F9D58\",\r\n      icon: \"fa-play-circle\",\r\n      content : 'Videos',\r\n      href : \"/videos\",\r\n      click: itemClick\r\n    },\r\n  ];\r\n\r\n  \r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n  this.getInitialState = this.getInitialState.bind(this);\r\n  this.componentWillMount = this.componentWillMount.bind(this);\r\n  this.makeMenu = this.makeMenu.bind(this);\r\n  this.toggleMenu = this.toggleMenu.bind(this);\r\n  this.animateButtons = this.animateButtons.bind(this);\r\n      \r\n  }\r\n  \r\n  \r\n    getInitialState () {\r\n      return {\r\n        menuOpen: false,\r\n      };\r\n    }\r\n    \r\n    componentWillMount () {\r\n      this.makeMenu(menuData);\r\n    }\r\n    makeMenu (menuConfig) {\r\n      const angle = 360 / menuConfig.length;\r\n      let rotation = 0;\r\n      let menuItems = [];\r\n      \r\n      menuConfig.forEach(({\r\n        color,\r\n        content,\r\n        href, \r\n        icon, \r\n        click\r\n      }) => {\r\n        menuItems.push({\r\n          color,\r\n          icon,\r\n          content,\r\n          href,\r\n          click,\r\n          rotation,\r\n          angle,\r\n          show: false\r\n        });\r\n        rotation += angle;\r\n      }); \r\n      \r\n      this.setState({\r\n        menuItems: menuItems\r\n      });\r\n    }\r\n  \r\n    toggleMenu () {\r\n  \r\n      this.setState({\r\n        menuOpen: !this.state.menuOpen\r\n      });\r\n    }\r\n  \r\n    animateButtons () {\r\n      const length = this.state.menuItems.length;\r\n      \r\n      const stagger = (i) => {\r\n        if (i < length) {\r\n            setTimeout(() => {\r\n            let items = this.state.menuItems;\r\n            let showing = this.state.menuItems[i].show;\r\n            \r\n            this.setState({\r\n              menuItems: [\r\n                ...items.slice(0, i),\r\n                Object.assign({}, items[i], {\r\n                  show: !showing\r\n                }),\r\n                ...items.slice(i + 1)\r\n              ]\r\n            });\r\n            \r\n            stagger(i + 1);\r\n            \r\n          },60);\r\n        }\r\n      };\r\n      \r\n      stagger(0); \r\n    }\r\n  \r\n    render() {\r\n      \r\n      return (\r\n        <div className=\"\">\r\n          \r\n          <MenuToggle \r\n            \r\n            toggle={this.toggleMenu}\r\n            open={this.state.menuOpen}\r\n            animateButtons={this.animateButtons}\r\n          />\r\n          \r\n          \r\n          \r\n          <Menu\r\n            size={16}\r\n            items={this.state.menuItems} \r\n            open={this.state.menuOpen}\r\n            toggle = {this.toggleMenu}\r\n            animateButtons = {this.animateButtons}\r\n          />\r\n        \r\n          <div className=\"logo-image pl-4 pt-1 text-secondary\" style={{display:\"flex\", flexDirection:\"row\"}}>\r\n          <Link to=\"/\" style={{textDecoration:\"none\"}}><img src={Image} className=\"mt-2\" style={{maxWidth:\"220px\"}} alt=\"img\"/></Link>\r\n          \r\n          <div className=\"mx-3 mt-4 \">\r\n          \r\n          \r\n          </div>\r\n            \r\n          </div>\r\n          \r\n          </div>\r\n      )}\r\n}\r\n\r\nconst Menu = ({\r\n    size, \r\n    items, \r\n    toggle, \r\n    open,\r\n    animateButtons\r\n  }) => (\r\n    <div className={open \r\n          ? \"menu-wrapper-open\" \r\n          : \"menu-wrapper-closed\"}\r\n    >\r\n      <div className={\"menu-background\"}>\r\n        <MenuItems\r\n          size={size}\r\n          items={items} \r\n          open={open}\r\n          toggle={toggle}\r\n          animateButtons={animateButtons}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n  const MenuItems = ({\r\n    size, \r\n    items, \r\n    open,\r\n    toggle,\r\n    animateButtons\r\n  }) => {\r\n    const buttons = items.map((item) => {\r\n      const styling = {\r\n        transform:\r\n          `rotate(${item.rotation}deg) \r\n           translate(${size/2}em) \r\n           rotate(${-(item.rotation)}deg)`,\r\n        backgroundColor: item.color,\r\n        display : \"flex\",\r\n        flexDirection : \"column\",\r\n        justifyContent : \"center\",\r\n        alignItems : \"center\"\r\n      };\r\n      \r\n      return (\r\n        <Link to={item.href} style={{textDecoration:\"none\"}}>\r\n\r\n        <div \r\n          className={item.show \r\n            ? \"menu-item item-show\" \r\n            : \"menu-item item-hide\"}\r\n          style={styling}\r\n          onClick={()=>{\r\n            toggle();\r\n            animateButtons();\r\n          }}\r\n          \r\n        >\r\n          <i style={{display:\"block\"}} className={\"fa \" + item.icon}\r\n             aria-hidden=\"true\"\r\n          ></i>\r\n          <p  className=\"text-white content\">{item.content}</p>\r\n        </div>\r\n        </Link>\r\n      );\r\n    });\r\n    \r\n    return (\r\n      <div \r\n        className={open \r\n          ? \"button-bg animate-menu\" \r\n          : \"button-bg\"}\r\n      > {buttons}\r\n      </div>\r\n    ); \r\n  }\r\n  \r\n  const MenuToggle = ({\r\n    toggle, \r\n    open, \r\n    animateButtons\r\n  }) => (\r\n    <button \r\n      className={open \r\n        ? \"menu-toggle toggle-open\" \r\n        : \"menu-toggle toggle-closed\"}\r\n      onClick={() => {\r\n        toggle(); \r\n        setTimeout(\r\n          animateButtons, \r\n          120\r\n        );\r\n      }}\r\n    > <i className={open \r\n           ? \"fa fa-times\"\r\n           : \"fa fa-bars\"}\r\n         \r\n      ></i>\r\n    </button>\r\n  );\r\n  export default Navbar;","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\main.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Footer.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Events.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Videos.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Home.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Connect.js",[],"C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\Header.js",["62","63","64"],"import React from 'react';\r\nimport 'react-typewriting-effect/dist/index.css';\r\nimport Img from '../assets/Capture.JPG';\r\nimport FadeIn from 'react-fade-in';\r\nimport {useState} from \"react\";\r\nimport DarkModeToggle from \"react-dark-mode-toggle\";\r\n \r\n\r\nfunction Header(){\r\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\r\n    return(\r\n        <div>\r\n            <div className=\"container-fluid  d-flex justify-content-center  mt-4\" style={{minHeight:\"70vh\"}}>\r\n            <div className=\"row\" style={{display:\"flex\", width:\"100%\" , justifyContent:\"center\", alignItems:\"center\"}}>\r\n            \r\n              <div className=\"col-lg-5 header-text\" style={{display:\"flex\", flexDirection:\"column\", justifyContent:\"center\", alignItems:\"start\"}}>\r\n                  <FadeIn delay=\"190\">\r\n                      <div class=\"typewriter\" style={{width:\"fit-content\"}}>\r\n                      <h1 className=\"font-weight-bold head \" style={{color:\"#404040\", }}>Developer Student Clubs</h1>\r\n\r\n                    </div>\r\n                    <br/>\r\n                    <h4 className=\"\" style={{color:\"#404040\"}}>Pimpri Chinchwad College of Engineering</h4>\r\n                    <br/>\r\n                    <p className=\"\" style={{width:\"fit-content\"}} >Students from all undergraduate or graduate programs with an interest in growing as a developer are welcome. \r\n                    A community of <span className=\"text-success font-weight-bold\">Developers</span>, <span className=\"text-danger font-weight-bold\">Designers</span> and <span className=\"text-primary font-weight-bold\">Programmers</span> \r\n                    . By joining a DSC, students grow their knowledge in a peer-to-peer learning environment and build solutions for local businesses and their community.\r\n\r\n                    </p>\r\n                    <br/>\r\n                    <div className=\"developer-logo\" style={{display:\"flex\",alignItems:\"center\"}}>\r\n                    \r\n                    <h4 className=\"mr-2 mt-1\">Powered By</h4>\r\n                    <a href=\"https://gdg.community.dev/\" target=\"blank\"><img alt = \"img\" src={Img}/></a>\r\n                    </div>\r\n                    </FadeIn>\r\n              </div>\r\n              \r\n              <div className=\"col-lg-7 pl-5\" >\r\n              <FadeIn delay=\"180\">\r\n                <lottie-player className=\" \" src=\"https://assets8.lottiefiles.com/packages/lf20_atgjqorh.json\"  background=\"transparent\"  speed=\"1.5\"  style={{maxWidth:\"100%\", height : 'auto'}}  loop  autoplay></lottie-player>\r\n              </FadeIn>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header;","C:\\Users\\dell\\Desktop\\sample_dscpccoe\\src\\components\\WhatWeDo.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":24},{"ruleId":"69","severity":1,"message":"73","line":19,"column":7,"nodeType":"71","messageId":"72","endLine":19,"endColumn":16},{"ruleId":"69","severity":1,"message":"74","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":22},{"ruleId":"69","severity":1,"message":"74","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":22},{"ruleId":"69","severity":1,"message":"75","line":10,"column":10,"nodeType":"71","messageId":"72","endLine":10,"endColumn":20},{"ruleId":"69","severity":1,"message":"76","line":10,"column":22,"nodeType":"71","messageId":"72","endLine":10,"endColumn":35},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'useStyles' is assigned a value but never used.","'DarkModeToggle' is defined but never used.","'isDarkMode' is assigned a value but never used.","'setIsDarkMode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]